<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/background"
    android:clickable="true"
    android:keepScreenOn="true"
    app:layout_constraintBottom_toBottomOf="parent"
    app:layout_constraintEnd_toEndOf="parent"
    app:layout_constraintStart_toStartOf="parent"
    app:layout_constraintTop_toTopOf="parent"
    tools:context=".InstructionActivity">

    <LinearLayout
        android:id="@+id/linearLayout4"
        android:layout_width="407dp"
        android:layout_height="65dp"
        android:layout_marginStart="1dp"
        android:layout_marginTop="1dp"
        android:layout_marginEnd="1dp"
        android:background="@color/backgroundupperpart"
        android:orientation="vertical"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <TextView
            android:id="@+id/textView9"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:fontFamily="@font/poppins_bold"
            android:paddingLeft="30dp"
            android:paddingTop="12dp"
            android:text="@string/instruction_headling"
            android:textSize="20sp" />
    </LinearLayout>

    <EditText
        android:id="@+id/navigate"
        android:layout_width="373dp"
        android:layout_height="1022dp"
        android:layout_marginStart="21dp"
        android:layout_marginTop="12dp"
        android:layout_marginEnd="21dp"
        android:editable="false"
        android:ems="10"
        android:gravity="start|top"
        android:inputType="none"
        android:keepScreenOn="true"
        android:text=' 1. **Custom Prompt**                         2. **Custom Prompt with Image**                         3. **Describe Image**                         4. **Image to Text**                          ## Features                          ### 1. Custom Prompt                          - **Purpose**: Allows you to enter a custom query or instruction.                         - **How to Use**:                           1. Open the app and navigate to the custom prompt input section.                           2. Enter your custom instruction or query in the provided text box.                           3. Submit the prompt by pressing the "Submit" button.                           4. The app will process your input and provide a response based on your query.                          ### 2. Custom Prompt with Image                          - **Purpose**: Combine a custom prompt with an image for more context-specific responses.                         - **How to Use**:                           1. Open the app and go to the custom prompt and image upload section.                           2. Enter your custom instruction or query in the text box.                           3. Upload or take a photo by selecting the image upload option.                           4. Submit both the prompt and image by pressing the "Submit" button.                           5. The app will analyze the image and the prompt to generate a response that considers both elements.                          ### 3. Describe Image                          - **Purpose**: Provides you a textual description of an uploaded or captured image.                         - **How to Use**:                           1. Open the app and navigate to the image description feature.                           2. Upload or capture an image using the provided options.                           3. Submit the image for processing.                           4. The app will analyze the image and generate a descriptive text summarizing its content.                          ### 4. Image to Text                          - **Purpose**: Extracts and displays text from an image.                         - **How to Use**:                           1. Open the app and go to the image-to-text conversion section.                           2. Upload or capture an image that contains text.                           3. Submit the image for text extraction.                           4. The app will process the image and provide the extracted text for you to view.'
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/linearLayout4" />
</androidx.constraintlayout.widget.ConstraintLayout>
